<Activity mc:Ignorable="sap sap2010" x:Class="CreateReport" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ScenarioId" Type="InArgument(x:String)" />
    <x:Property Name="in_TCID" Type="InArgument(x:String)" />
  </x:Members>
  <this:CreateReport.in_ScenarioId>
    <InArgument x:TypeArguments="x:String" />
  </this:CreateReport.in_ScenarioId>
  <this:CreateReport.in_TCID>
    <InArgument x:TypeArguments="x:String" />
  </this:CreateReport.in_TCID>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CreateReport" sap:VirtualizedContainerService.HintSize="1276,1178" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:Exception" Name="Error" />
      <Variable x:TypeArguments="x:String" Name="Token" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="552,1155" sap2010:WorkflowViewState.IdRef="IfElseIf_3">
      <ui:IfElseIf.ConditionBlocks>
        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
          <ui:IfElseIfBlock BlockType="If" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_1">
            <ui:IfElseIfBlock.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">GlobalVariables.UseReport</CSharpValue>
              </InArgument>
            </ui:IfElseIfBlock.Condition>
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="501,936" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeCode Code="var client = new System.Net.Http.HttpClient();&#xD;&#xA;client.BaseAddress = new System.Uri(in_BaseUrl);&#xD;&#xA;&#xD;&#xA;var request = new &#xD;&#xA;{&#xD;&#xA;&#x9;project = in_ProjectName,&#xD;&#xA;&#x9;scenario = in_Scenario,&#xD;&#xA;&#x9;test_case = in_TCID,&#xD;&#xA;&#x9;tool = in_Tool,&#xD;&#xA;&#x9;activity = in_Activity,&#xD;&#xA;&#x9;author = in_Author&#xD;&#xA;};&#xD;&#xA;&#xD;&#xA;var jsonBodyRequest = System.Text.Json.JsonSerializer.Serialize(request);&#xD;&#xA;var content = new System.Net.Http.StringContent(jsonBodyRequest, System.Text.Encoding.UTF8, &quot;application/json&quot;);&#xD;&#xA;&#xD;&#xA;try &#xD;&#xA;{&#xD;&#xA;&#x9;var response = client.PostAsync(&quot;api/create-report&quot;, content).Result;&#xD;&#xA;&#xD;&#xA;&#x9;if (response.IsSuccessStatusCode) &#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;var responseBody = response.Content.ReadAsStringAsync().Result;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Newtonsoft.Json.Linq.JObject responseData = Newtonsoft.Json.Linq.JObject.Parse(responseBody);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;var token = responseData[&quot;data&quot;][&quot;token&quot;];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;out_Token = token.ToString();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;out_Error = new Exception(&quot;&quot;);&#xD;&#xA;&#x9;} &#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;throw new Exception(response.Content.ReadAsStringAsync().Result);&#xD;&#xA;&#x9;}&#xD;&#xA;} catch (Exception e) &#xD;&#xA;{&#xD;&#xA;&#x9;out_Error = e;&#xD;&#xA;}&#xD;&#xA;" ContinueOnError="False" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="467,197" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                  <ui:InvokeCode.Arguments>
                    <OutArgument x:TypeArguments="s:Exception" x:Key="out_Error">
                      <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">Error</CSharpReference>
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_Token">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">Token</CSharpReference>
                    </OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_BaseUrl">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">GlobalVariables.TarsUrl</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">GlobalVariables.ProjectName</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Activity">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">GlobalVariables.Activity</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Tool">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">GlobalVariables.Tool</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Author">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">GlobalVariables.Author</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Scenario">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">in_ScenarioId</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_TCID">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">in_TCID</CSharpValue>
                    </InArgument>
                  </ui:InvokeCode.Arguments>
                </ui:InvokeCode>
                <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="467,574" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
                  <ui:IfElseIf.ConditionBlocks>
                    <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                      <ui:IfElseIfBlock BlockType="If" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_2">
                        <ui:IfElseIfBlock.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">!String.IsNullOrEmpty(Error.Message)</CSharpValue>
                          </InArgument>
                        </ui:IfElseIfBlock.Condition>
                        <ui:IfElseIfBlock.Then>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,346" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                              <ui:LogMessage.Level>
                                <InArgument x:TypeArguments="ui:LogLevel">
                                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Level>
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">Error.Message</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                            </ui:LogMessage>
                            <Throw sap:VirtualizedContainerService.HintSize="382,113" sap2010:WorkflowViewState.IdRef="Throw_1">
                              <InArgument x:TypeArguments="s:Exception">
                                <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">new Exception("CREATE REPORT ERROR")</CSharpValue>
                              </InArgument>
                            </Throw>
                          </Sequence>
                        </ui:IfElseIfBlock.Then>
                      </ui:IfElseIfBlock>
                    </sc:BindingList>
                  </ui:IfElseIf.ConditionBlocks>
                </ui:IfElseIf>
                <Assign sap:VirtualizedContainerService.HintSize="467,105" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">GlobalVariables.TarsToken</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">Token</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
        </sc:BindingList>
      </ui:IfElseIf.ConditionBlocks>
    </ui:IfElseIf>
  </Sequence>
</Activity>